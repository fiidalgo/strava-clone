{"ast":null,"code":"var _jsxFileName = \"/home/nico/code/strava-clone/frontend/src/components/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Analytics({\n  range,\n  runs\n}) {\n  _s();\n  const [processedRuns, setProcessedRuns] = useState([]);\n  useEffect(() => {\n    setProcessedRuns(processRuns(runs, range));\n  }, [range, runs]);\n  const processRuns = (data, range) => {\n    const endDate = new Date();\n    let startDate;\n    switch (range) {\n      case '7D':\n        startDate = new Date(endDate);\n        startDate.setDate(startDate.getDate() - 7);\n        break;\n      case '1M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 1);\n        break;\n      case '3M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 3);\n        break;\n      case '6M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 6);\n        break;\n      case '1Y':\n        startDate = new Date(endDate);\n        startDate.setFullYear(startDate.getFullYear() - 1);\n        break;\n      default:\n        startDate = new Date(endDate);\n        startDate.setDate(startDate.getDate() - 7);\n    }\n    const dateMap = {};\n    data.forEach(run => {\n      const runDate = new Date(run.date);\n      runDate.setDate(runDate.getDate() + 1); // Fix the date offset\n      const dateStr = runDate.toDateString();\n      dateMap[dateStr] = run.distance;\n    });\n    const dates = [];\n    for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n      const dateStr = new Date(d).toDateString();\n      dates.push({\n        date: dateStr,\n        distance: dateMap[dateStr] || 0\n      });\n    }\n    return dates;\n  };\n  const chartData = {\n    labels: processedRuns.map(run => run.date),\n    datasets: [{\n      label: 'Distance (mi)',\n      data: processedRuns.map(run => run.distance),\n      fill: 'start',\n      backgroundColor: 'rgba(255,87,34,0.2)',\n      borderColor: '#FF5722',\n      pointBackgroundColor: '#FF5722'\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        suggestedMax: 10\n      },\n      x: {\n        type: 'category',\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(Analytics, \"kLe0EB+6khrA1qHaBTs9IezACYE=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","Analytics","range","runs","_s","processedRuns","setProcessedRuns","processRuns","data","endDate","Date","startDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","dateMap","forEach","run","runDate","date","dateStr","toDateString","distance","dates","d","push","chartData","labels","map","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","chartOptions","scales","y","beginAtZero","suggestedMax","x","type","ticks","maxRotation","minRotation","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nico/code/strava-clone/frontend/src/components/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n);\n\nfunction Analytics({ range, runs }) {\n    const [processedRuns, setProcessedRuns] = useState([]);\n\n    useEffect(() => {\n        setProcessedRuns(processRuns(runs, range));\n    }, [range, runs]);\n\n    const processRuns = (data, range) => {\n        const endDate = new Date();\n        let startDate;\n        switch (range) {\n            case '7D':\n                startDate = new Date(endDate);\n                startDate.setDate(startDate.getDate() - 7);\n                break;\n            case '1M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 1);\n                break;\n            case '3M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 3);\n                break;\n            case '6M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 6);\n                break;\n            case '1Y':\n                startDate = new Date(endDate);\n                startDate.setFullYear(startDate.getFullYear() - 1);\n                break;\n            default:\n                startDate = new Date(endDate);\n                startDate.setDate(startDate.getDate() - 7);\n        }\n\n        const dateMap = {};\n        data.forEach((run) => {\n            const runDate = new Date(run.date);\n            runDate.setDate(runDate.getDate() + 1); // Fix the date offset\n            const dateStr = runDate.toDateString();\n            dateMap[dateStr] = run.distance;\n        });\n\n        const dates = [];\n        for (\n            let d = new Date(startDate);\n            d <= endDate;\n            d.setDate(d.getDate() + 1)\n        ) {\n            const dateStr = new Date(d).toDateString();\n            dates.push({\n                date: dateStr,\n                distance: dateMap[dateStr] || 0,\n            });\n        }\n\n        return dates;\n    };\n\n    const chartData = {\n        labels: processedRuns.map((run) => run.date),\n        datasets: [\n            {\n                label: 'Distance (mi)',\n                data: processedRuns.map((run) => run.distance),\n                fill: 'start',\n                backgroundColor: 'rgba(255,87,34,0.2)',\n                borderColor:'#FF5722',\n                pointBackgroundColor: '#FF5722',\n            },\n        ],\n    };\n\n    const chartOptions = {\n        scales: {\n            y: {\n                beginAtZero: true,\n                suggestedMax: 10,\n            },\n            x: {\n                type: 'category',\n                ticks: {\n                    maxRotation: 45,\n                    minRotation: 45\n                }\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Line data={chartData} options={chartOptions} />\n        </div>\n    );\n\n}\n\nexport default Analytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}