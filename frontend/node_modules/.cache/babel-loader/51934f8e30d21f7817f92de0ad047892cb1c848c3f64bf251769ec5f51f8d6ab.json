{"ast":null,"code":"var _jsxFileName = \"/home/nico/code/strava-clone/frontend/src/components/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Analytics() {\n  _s();\n  const [runs, setRuns] = useState([]);\n  const [range, setRange] = useState('week'); // Default range is a week\n\n  const fetchRuns = useCallback(async range => {\n    const token = localStorage.getItem('token');\n    const {\n      startDate,\n      endDate\n    } = getDateRange(range);\n    try {\n      const res = await axios.get('http://localhost:5000/api/runs/analytics', {\n        headers: {\n          'x-auth-token': token\n        },\n        params: {\n          startDate,\n          endDate\n        }\n      });\n      setRuns(res.data);\n    } catch (err) {\n      console.error('Error fetching runs:', err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRuns(range);\n  }, [range, fetchRuns]);\n  const getDateRange = range => {\n    const endDate = new Date();\n    let startDate;\n    switch (range) {\n      case 'month':\n        startDate = new Date();\n        startDate.setMonth(startDate.getMonth() - 1);\n        break;\n      case 'three-months':\n        startDate = new Date();\n        startDate.setMonth(startDate.getMonth() - 3);\n        break;\n      case 'year':\n        startDate = new Date();\n        startDate.setFullYear(startDate.getFullYear() - 1);\n        break;\n      case 'week':\n      default:\n        startDate = new Date();\n        startDate.setDate(startDate.getDate() - 7);\n        break;\n    }\n    return {\n      startDate: startDate.toISOString().split('T')[0],\n      endDate: endDate.toISOString().split('T')[0]\n    };\n  };\n  const data = {\n    labels: runs.map(run => run.date),\n    datasets: [{\n      label: 'Distance (miles)',\n      data: runs.map(run => run.distance),\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Running Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRange('week'),\n        children: \"Past Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRange('month'),\n        children: \"Past Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRange('three-month'),\n        children: \"Past 3 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRange('year'),\n        children: \"Past Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(Analytics, \"Ha1qeaOEqqhoDF5r/EvXx43LllQ=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","Analytics","_s","runs","setRuns","range","setRange","fetchRuns","token","localStorage","getItem","startDate","endDate","getDateRange","res","get","headers","params","data","err","console","error","Date","setMonth","getMonth","setFullYear","getFullYear","setDate","getDate","toISOString","split","labels","map","run","date","datasets","label","distance","fill","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/nico/code/strava-clone/frontend/src/components/Analytics.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport {\n    Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n);\n\nfunction Analytics() {\n    const [runs, setRuns] = useState([]);\n    const [range, setRange] = useState('week'); // Default range is a week\n\n    const fetchRuns = useCallback(async (range) => {\n        const token = localStorage.getItem('token');\n        const { startDate, endDate } = getDateRange(range);\n\n        try {\n            const res = await axios.get('http://localhost:5000/api/runs/analytics', {\n                headers: {\n                    'x-auth-token': token\n                },\n                params: {\n                    startDate,\n                    endDate\n                }\n            });\n            setRuns(res.data);\n        } catch (err) {\n            console.error('Error fetching runs:', err);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchRuns(range);\n    }, [range, fetchRuns]);\n\n    const getDateRange = (range) => {\n        const endDate = new Date();\n        let startDate;\n\n        switch (range) {\n            case 'month':\n                startDate = new Date();\n                startDate.setMonth(startDate.getMonth() - 1);\n                break;\n            case 'three-months':\n                startDate = new Date();\n                startDate.setMonth(startDate.getMonth() - 3);\n                break;\n            case 'year':\n                startDate = new Date();\n                startDate.setFullYear(startDate.getFullYear() - 1);\n                break;\n            case 'week':\n                default:\n                    startDate = new Date();\n                    startDate.setDate(startDate.getDate() - 7);\n                    break;\n        }\n\n        return {\n            startDate: startDate.toISOString().split('T')[0],\n            endDate: endDate.toISOString().split('T')[0],\n        };\n    };\n\n    const data = {\n        labels: runs.map(run => run.date),\n        datasets: [\n            {\n                label: 'Distance (miles)',\n                data: runs.map(run => run.distance),\n                fill: false,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(75,192,192,1)',\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h2>Your Running Analytics</h2>\n            <Line data={data} />\n            <div>\n                <button onClick={() => setRange('week')}>Past Week</button>\n                <button onClick={() => setRange('month')}>Past Month</button>\n                <button onClick={() => setRange('three-month')}>Past 3 Months</button>\n                <button onClick={() => setRange('year')}>Past Year</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}