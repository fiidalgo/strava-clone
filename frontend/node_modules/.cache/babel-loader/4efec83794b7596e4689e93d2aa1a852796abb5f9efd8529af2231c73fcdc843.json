{"ast":null,"code":"var _jsxFileName = \"/home/nico/code/strava-clone/frontend/src/components/FitnessScoreChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction FitnessScoreChart({\n  user\n}) {\n  const fitnessData = user.fitnessScoreHistory || [];\n  console.log(fitnessData);\n  const chartData = {\n    labels: fitnessData.map(data => data.date),\n    datasets: [{\n      label: 'Fitness Score',\n      data: fitnessData.map(data => data.score),\n      fill: true,\n      backgroundColor: 'rgba(34,139,34,0.2)',\n      borderColor: '#228822',\n      pointBackgroundColor: '#228822'\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        suggestedMax: 100\n      },\n      x: {\n        type: 'category',\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Fitness Score Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = FitnessScoreChart;\nexport default FitnessScoreChart;\nvar _c;\n$RefreshReg$(_c, \"FitnessScoreChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","FitnessScoreChart","user","fitnessData","fitnessScoreHistory","console","log","chartData","labels","map","data","date","datasets","label","score","fill","backgroundColor","borderColor","pointBackgroundColor","chartOptions","scales","y","beginAtZero","suggestedMax","x","type","ticks","maxRotation","minRotation","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/home/nico/code/strava-clone/frontend/src/components/FitnessScoreChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n);\n\nfunction FitnessScoreChart({ user }) { \n    const fitnessData = user.fitnessScoreHistory || [];\n    console.log(fitnessData);\n\n    const chartData = {\n        labels: fitnessData.map(data => data.date),\n        datasets: [\n            {\n                label: 'Fitness Score',\n                data: fitnessData.map(data => data.score),\n                fill: true,\n                backgroundColor: 'rgba(34,139,34,0.2)',\n                borderColor: '#228822',\n                pointBackgroundColor: '#228822',\n            }\n        ]\n    };\n\n    const chartOptions = {\n        scales: {\n            y: {\n                beginAtZero: true,\n                suggestedMax: 100,\n            },\n            x: {\n                type: 'category',\n                ticks: {\n                    maxRotation: 45,\n                    minRotation: 45\n                }\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h3>Your Fitness Score Over Time</h3>\n            <Line data={chartData} options={chartOptions} />\n        </div>\n    );\n}\n\nexport default FitnessScoreChart;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACIC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAC5F,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCV,OAAO,CAACW,QAAQ,CACZV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAC3E,CAAC;AAED,SAASK,iBAAiBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACjC,MAAMC,WAAW,GAAGD,IAAI,CAACE,mBAAmB,IAAI,EAAE;EAClDC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EAExB,MAAMI,SAAS,GAAG;IACdC,MAAM,EAAEL,WAAW,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IAC1CC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,eAAe;MACtBH,IAAI,EAAEP,WAAW,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,KAAK,CAAC;MACzCC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAE,qBAAqB;MACtCC,WAAW,EAAE,SAAS;MACtBC,oBAAoB,EAAE;IAC1B,CAAC;EAET,CAAC;EAED,MAAMC,YAAY,GAAG;IACjBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE;MAClB,CAAC;MACDC,CAAC,EAAE;QACCC,IAAI,EAAE,UAAU;QAChBC,KAAK,EAAE;UACHC,WAAW,EAAE,EAAE;UACfC,WAAW,EAAE;QACjB;MACJ;IACJ;EACJ,CAAC;EAED,oBACI7B,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrClC,OAAA,CAACF,IAAI;MAACa,IAAI,EAAEH,SAAU;MAAC2B,OAAO,EAAEf;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACE,EAAA,GAxCQlC,iBAAiB;AA0C1B,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}