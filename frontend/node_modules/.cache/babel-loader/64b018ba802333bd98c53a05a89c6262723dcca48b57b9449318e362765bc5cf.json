{"ast":null,"code":"var _jsxFileName = \"/home/nico/code/strava-clone/frontend/src/components/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Analytics() {\n  _s();\n  const [runs, setRuns] = useState([]);\n  const [range, setRange] = useState('7D');\n  useEffect(() => {\n    fetchRuns();\n  }, [range]);\n  const fetchRuns = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get('http://localhost:5000/api/runs', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      const processedRuns = processRuns(res.data, range);\n      setRuns(processedRuns);\n    } catch (err) {\n      console.error('Error fetching runs:', err);\n    }\n  };\n  const processRuns = (data, range) => {\n    const endDate = new Date();\n    let startDate;\n    switch (range) {\n      case '7D':\n        startDate = new Date(endDate);\n        startDate.setDate(startDate.getDate() - 7);\n        break;\n      case '1M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 1);\n        break;\n      case '3M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 3);\n        break;\n      case '6M':\n        startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 6);\n        break;\n      case '1Y':\n        startDate = new Date(endDate);\n        startDate.setFullYear(startDate.getFullYear() - 1);\n        break;\n      default:\n        startDate = new Date(endDate);\n        startDate.setDate(startDate.getDate() - 7);\n    }\n    const dateMap = {};\n    data.forEach(run => {\n      const runDate = new Date(run.date).toDateString();\n      dateMap[runDate] = run.distance;\n    });\n    const dates = [];\n    for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\n      const dateStr = new Date(d).toDateString();\n      dates.push({\n        date: dateStr,\n        distance: dateMap[dateStr] || 0\n      });\n    }\n    return dates;\n  };\n  const chartData = {\n    labels: runs.map(run => run.date),\n    datasets: [{\n      label: 'Distance (mi)',\n      data: runs.map(run => run.distance),\n      fill: true,\n      backgroundColor: 'rgba(255,87,34,0.2)',\n      borderColor: '#FF5722',\n      pointBackgroundColor: '#FF5722'\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        suggestedMax: 10\n      },\n      x: {\n        type: 'category'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(Analytics, \"Wi//uDDkMv2CKgGWNS89KJwSWcQ=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","Analytics","_s","runs","setRuns","range","setRange","fetchRuns","token","localStorage","getItem","res","get","headers","processedRuns","processRuns","data","err","console","error","endDate","Date","startDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","dateMap","forEach","run","runDate","date","toDateString","distance","dates","d","dateStr","push","chartData","labels","map","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","chartOptions","scales","y","beginAtZero","suggestedMax","x","type","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nico/code/strava-clone/frontend/src/components/Analytics.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport {\n    Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend\n);\n\nfunction Analytics() {\n    const [runs, setRuns] = useState([]);\n    const [range, setRange] = useState('7D');\n\n    useEffect(() => {\n        fetchRuns();\n    }, [range]);\n\n    const fetchRuns = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            const res = await axios.get('http://localhost:5000/api/runs', {\n                headers: {\n                    'x-auth-token': token\n                },\n            });\n\n            const processedRuns = processRuns(res.data, range);\n            setRuns(processedRuns);\n        } catch (err) {\n            console.error('Error fetching runs:', err);\n        }\n    };\n\n    const processRuns = (data, range) => {\n        const endDate = new Date();\n        let startDate;\n        switch (range) {\n            case '7D':\n                startDate = new Date(endDate);\n                startDate.setDate(startDate.getDate() - 7);\n                break;\n            case '1M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 1);\n                break;\n            case '3M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 3);\n                break;\n            case '6M':\n                startDate = new Date(endDate);\n                startDate.setMonth(startDate.getMonth() - 6);\n                break;\n            case '1Y':\n                startDate = new Date(endDate);\n                startDate.setFullYear(startDate.getFullYear() - 1);\n                break;\n            default:\n                startDate = new Date(endDate);\n                startDate.setDate(startDate.getDate() - 7);\n        }\n\n        const dateMap = {};\n        data.forEach((run) => {\n            const runDate = new Date(run.date).toDateString();\n            dateMap[runDate] = run.distance;\n        });\n\n        const dates = [];\n        for (\n            let d = new Date(startDate);\n            d <= endDate;\n            d.setDate(d.getDate() + 1)\n        ) {\n            const dateStr = new Date(d).toDateString();\n            dates.push({\n                date: dateStr,\n                distance: dateMap[dateStr] || 0,\n            });\n        }\n\n        return dates;\n    };\n\n    const chartData = {\n        labels: runs.map((run) => run.date),\n        datasets: [\n            {\n                label: 'Distance (mi)',\n                data: runs.map((run) => run.distance),\n                fill: true,\n                backgroundColor: 'rgba(255,87,34,0.2)',\n                borderColor:'#FF5722',\n                pointBackgroundColor: '#FF5722',\n            },\n        ],\n    };\n\n    const chartOptions = {\n        scales: {\n            y: {\n                beginAtZero: true,\n                suggestedMax: 10,\n            },\n            x: {\n                type: 'category',\n            }\n        }\n    };\n\n    return (\n        <div>\n            <Line data={chartData} options={chartOptions} />\n        </div>\n    );\n\n}\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}